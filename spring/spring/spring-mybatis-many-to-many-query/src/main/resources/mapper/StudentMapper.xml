<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abc.mapper.StudentMapper">
  <!-- 作者博客：http://legend2011.blog.51cto.com/
                     作者的MyBatis专栏：http://legend2011.blog.51cto.com/3018495/d-5
                    欢迎博客留言，和作者多交流 -->

  <!-- 查询学生的结果映射，只映射简单属性 -->
  <resultMap id="simpleStudent" type="com.abc.domain.Student">
    <id property="id" column="s_id"/>
    <result property="name" column="s_name"/>
    <result property="gender" column="s_gender"/>
    <result property="major" column="s_major"/>
    <result property="grade" column="s_grade"/>
  </resultMap>

  <!-- 查询学生的结果映射，含指导教师、选修课程等复杂属性的映射，从simpleStudent继承而来，提高resultMap的灵活性和重用性 -->
  <resultMap id="studentResultMap" type="com.abc.domain.Student" extends="simpleStudent">
    <!--association的嵌套的结果映射方式。 -->
    <association property="supervisor" javaType="Teacher" resultMap="com.abc.mapper.TeacherMapper.simpleTeacher">
    </association>
    <!-- 嵌入的select查询方式，查询学生选修的课程。采用了CourseMapper.xml文件中的id为getByStudentId的select元素，这里的
         com.abc.mapper.CourseMapper是其命名空间名 -->
    <collection property="courses" ofType="Course" select="com.abc.mapper.CourseMapper.getByStudentId"
      column="s_id">
    </collection>
  </resultMap>

  <!--  为保证学生能够被查询到，select语句采用了左连接。因为学生可能暂时还没有指导老师，在这种情况下，若直接连接查询则会连学生也查询不到。 -->
  <select id="getById" parameterType="int" resultMap="studentResultMap">
    select s.id s_id, s.name s_name, s.gender s_gender, s.major s_major, s.grade
    s_grade, t.id t_id, t.name t_name, t.gender t_gender, t.title t_title, t.research_area
    t_research_area from student s left join teacher t on s.supervisor_id = t.id
    where s.id=#{id}
  </select>

  <!--在主配置文件中配置了类型别名，因此这里可以用 Student代替com.abc.domain.Student。 useGeneratedKeys="true"表明使用数据库生成的主键，
    这里使用数据库的自增主键，keyProperty指定主键列 -->
  <insert id="add" parameterType="Student" useGeneratedKeys="true" keyProperty="id">
    insert into student(name,gender,major,grade)
    values(#{name},#{gender},#{major},#{grade})
  </insert>


  <update id="update" parameterType="Student">
    update student set
    name=#{name},
    gender=#{gender},
    major=#{major},
    grade=#{grade}
    where
    id=#{id}
  </update>

  <delete id="delete" parameterType="int">
    delete from student where
    id=#{id}
  </delete>

</mapper>