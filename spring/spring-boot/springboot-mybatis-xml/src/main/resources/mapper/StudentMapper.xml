<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lee.mybatis.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="org.lee.mybatis.model.Student">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <result column="class_number" jdbcType="VARCHAR" property="classNumber"/>
        <result column="institute_id" jdbcType="INTEGER" property="instituteId"/>
    </resultMap>


    <sql id="Base_Column_List">
        id, name, grade, class_number, institute_id
    </sql>


    <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
        where id = #{id,jdbcType=INTEGER}
    </select>


    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM student
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>


    <insert id="save" keyColumn="id" keyProperty="id"
            parameterType="org.lee.mybatis.model.Student" useGeneratedKeys="true">
        INSERT INTO student (id, name, grade,
                             class_number, institute_id)
        VALUES (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR},
                #{classNumber,jdbcType=VARCHAR}, #{instituteId,jdbcType=INTEGER})
    </insert>


    <update id="update" parameterType="org.lee.mybatis.model.Student">
        update student
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=VARCHAR},
            </if>
            <if test="classNumber != null">
                class_number = #{classNumber,jdbcType=VARCHAR},
            </if>
            <if test="instituteId != null">
                institute_id = #{instituteId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
    </select>


    <select id="findByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
        where id in
        (
        <foreach collection="ids" item="id" separator=",">
            #{id,jdbcType=INTEGER}
        </foreach>
        )
    </select>


    <delete id="deleteByIds" parameterType="java.util.List">
        delete from
        student
        where
        id in
        <foreach close=")" collection="list" item="item" open="(" separator=",">
            #{item,jdbcType=INTEGER}
        </foreach>
    </delete>


    <insert id="saveBatch" keyColumn="id" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
        insert into
        student
        (id, name, grade, class_number, institute_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.grade,jdbcType=VARCHAR},
            #{item.classNumber,jdbcType=VARCHAR}, #{item.instituteId,jdbcType=INTEGER})
        </foreach>
    </insert>


    <update id="updateBatch" parameterType="java.util.List">
        update student
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.name != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="grade = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.grade != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.grade,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="class_number = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.classNumber != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.classNumber,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="institute_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.instituteId != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.instituteId,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" item="item" separator=", ">
            id = #{id,jdbcType=INTEGER}
        </foreach>
    </update>

</mapper>
