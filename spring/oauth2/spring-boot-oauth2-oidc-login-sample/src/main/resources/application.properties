logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.web.util.matcher=INFO
logging.level.org.springframework.security.web.FilterChainProxy=INFO
logging.level.com.nimbusds=DEBUG

# Google (OpenID Connect)
# https://accounts.google.com/.well-known/openid-configuration
# org.springframework.security.config.oauth2.client.CommonOAuth2Provider.GOOGLE
spring.security.oauth2.client.provider.google.userNameAttribute=email
spring.security.oauth2.client.registration.google.client-id=356260521603-56oum0okkb7sv7nnch7kn3s9qa9olh4r.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=HrlFG4cOhvHpGFsZs5vp4e7x

# Keycloak (OpenID Connect)
# https://keycloak.ik.am/auth/realms/demo/.well-known/openid-configuration
spring.security.oauth2.client.provider.keycloak.authorization-uri=https://keycloak.ik.am/auth/realms/demo/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=https://keycloak.ik.am/auth/realms/demo/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=https://keycloak.ik.am/auth/realms/demo/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=https://keycloak.ik.am/auth/realms/demo/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=email
spring.security.oauth2.client.registration.keycloak.client-id=demo
spring.security.oauth2.client.registration.keycloak.client-secret=0ed727bf-4355-4b54-8c66-04363d629f44
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
spring.security.oauth2.client.registration.keycloak.client-authentication-method=basic
spring.security.oauth2.client.registration.keycloak.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}

# Cloud Foundry UAA (OpenID Connect)
# https://35-200-70-121.sslip.io:30823/.well-known/openid-configuration
spring.security.oauth2.client.provider.uaa.authorization-uri=https://35-200-70-121.sslip.io:30823/oauth/authorize
spring.security.oauth2.client.provider.uaa.token-uri=https://35-200-70-121.sslip.io:30823/oauth/token
spring.security.oauth2.client.provider.uaa.user-info-uri=https://35-200-70-121.sslip.io:30823/userinfo
spring.security.oauth2.client.provider.uaa.jwk-set-uri=https://35-200-70-121.sslip.io:30823/token_keys
spring.security.oauth2.client.provider.uaa.user-name-attribute=email
spring.security.oauth2.client.registration.uaa.client-id=demo
spring.security.oauth2.client.registration.uaa.client-secret=demo
spring.security.oauth2.client.registration.uaa.scope=openid
spring.security.oauth2.client.registration.uaa.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.uaa.client-name=Cloud Foundry UAA
spring.security.oauth2.client.registration.uaa.client-authentication-method=basic
spring.security.oauth2.client.registration.uaa.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}

# Github (OAuth2)
# org.springframework.security.config.oauth2.client.CommonOAuth2Provider.GITHUB
spring.security.oauth2.client.provider.github.userNameAttribute=login
spring.security.oauth2.client.registration.github.client-id=4e6b275bc75247d94bc6
spring.security.oauth2.client.registration.github.client-secret=45c89bd9b7f68501b27ab0c66dfb1d6d6a190067

# Custom (OAuth2)
spring.security.oauth2.client.provider.home.authorization-uri=https://home.ik.am/oauth/authorize
spring.security.oauth2.client.provider.home.token-uri=https://home.ik.am/oauth/token
spring.security.oauth2.client.provider.home.user-info-uri=https://home.ik.am/userinfo
spring.security.oauth2.client.provider.home.userNameAttribute=email
spring.security.oauth2.client.registration.home.client-id=a6491ceb-8313-43a1-aed8-fc6ae7812df4
spring.security.oauth2.client.registration.home.client-secret=781fdef8-6ab1-46e6-9191-9065db0fe4d6
spring.security.oauth2.client.registration.home.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.home.scope=member.read
spring.security.oauth2.client.registration.home.client-name=Home UAA
spring.security.oauth2.client.registration.home.client-authentication-method=basic
spring.security.oauth2.client.registration.home.redirectUriTemplate={baseUrl}/login/oauth2/code/{registrationId}

server.servlet.session.timeout=10s